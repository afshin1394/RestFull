// <auto-generated />
using System;
using EFDataAccessLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFDataAccessLibrary.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220103145539_maintain")]
    partial class maintain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFDataAccessLibrary.Models.Dare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DareGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DareStr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 3,
                            CategoryName = "فیزیکی",
                            DareGuid = new Guid("f403b75d-10bf-4887-9a7b-0855306dfbf4"),
                            DareStr = "به مدت پنج دقیقه پاهای شرکت کننده سمت چپ خود را ماساژ بده"
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 1,
                            CategoryName = "چالش",
                            DareGuid = new Guid("ff727078-a8b4-452c-b585-31d4bfcddf11"),
                            DareStr = "یک قاشق کره بخور"
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 2,
                            CategoryName = "سرگرمی",
                            DareGuid = new Guid("90f22fb9-d1f0-46cf-b76d-97cdfd009503"),
                            DareStr = "اولین کلمه ای که به ذهنت می رسد را فریاد بزن"
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            CategoryName = "چالش",
                            DareGuid = new Guid("a3131982-0134-42ab-8f08-ef0eff5f8e66"),
                            DareStr = "یک قطعه یخ در شلوار خود قرار بده و صبر کن تا آب شود"
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 1,
                            CategoryName = "چالش",
                            DareGuid = new Guid("e3798dd7-6b48-4899-af79-9ee9821fc804"),
                            DareStr = "ده بار دور خودت بگرد، بعد از آن سعی کن در خط مستقیم راه بروی"
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            CategoryName = "چالش",
                            DareGuid = new Guid("d39bf606-c2e9-4e5a-a71a-09eee9b8c2ac"),
                            DareStr = "با آهنگ انتخابی گروه برقص"
                        });
                });

            modelBuilder.Entity("EFDataAccessLibrary.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("QuestionGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("QuestionStr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryID = 0,
                            CategoryName = "شخصیتی",
                            QuestionGuid = new Guid("bfa00297-0e9f-43e5-b394-0a05d9bb033d"),
                            QuestionStr = "وقتی صحبت از دوستی می شود کدام ویژگی برای تو بیشترین ارزش را دارد؟ و اینکه آیا به راحتی دوست می شوی؟"
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 1,
                            CategoryName = "چالش",
                            QuestionGuid = new Guid("93fa7aff-3a52-4ce5-9a0e-257f31f41cbd"),
                            QuestionStr = "آیا تا به حال از کسی سو استفاده کرده ای؟"
                        },
                        new
                        {
                            Id = 3,
                            CategoryID = 2,
                            CategoryName = "سرگرمی",
                            QuestionGuid = new Guid("a624b12f-121e-4c52-a753-35ff0dc6e235"),
                            QuestionStr = " اگر یک حیوان بودی چه بودی؟"
                        },
                        new
                        {
                            Id = 4,
                            CategoryID = 0,
                            CategoryName = "شخصیتی",
                            QuestionGuid = new Guid("8aee77c4-46c5-4c6f-affa-9135eb6f7585"),
                            QuestionStr = "آیا خود را شخص قابل اعتمادی می دانید؟ آیا دوستان تان شما را قابل اعتماد می دانند؟"
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 0,
                            CategoryName = "شخصیتی",
                            QuestionGuid = new Guid("b97dfffd-657b-43c8-906f-633d0cbac5b6"),
                            QuestionStr = "آیا خرافاتی هستی؟"
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 0,
                            CategoryName = "شخصیتی",
                            QuestionGuid = new Guid("6479d53d-39af-47b8-94ba-e4992f379c09"),
                            QuestionStr = "آیا خودت را متعصب یا نژادپرست می دانید؟"
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 1,
                            CategoryName = "چالش",
                            QuestionGuid = new Guid("08fa2b30-eb75-4d31-986e-3126c01ee77b"),
                            QuestionStr = "بدترین رازت را بگو؟"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
